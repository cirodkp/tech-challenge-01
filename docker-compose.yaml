services: 
  api01: &api
    hostname: api01
    build:
      context: .
      dockerfile: ./src/TechChallenge01.Api/Dockerfile        
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
    depends_on:
      - db
      - rabbitmq
    ports:
      - "8080:8080"

  tokenapi:
    container_name: tokenapi
    hostname: tokenapi
    build:
      context: .
      dockerfile: ./src/TechChallenge01.TokenApi/Dockerfile        
    restart: always
    depends_on:
     - db
    ports:
     - "8081:8080"

  apigateway:
    build:
      context: .
      dockerfile: ./src/TechChallenge01.ApiGateway/Dockerfile
    container_name: apigateway
    hostname: apigateway
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
    depends_on:
      - api01
      - tokenapi
    ports:
      - "5000:8080"
    networks:
      - default

  rabbitmq-consumer:
    container_name: rabbitmq-consumer
    hostname: rabbitmq-consumer
    build:
      context: .
      dockerfile: ./src/TechChallenge01.Infra.Consumer/Dockerfile        
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
    depends_on:
      - db
      - rabbitmq
    ports:
      - "8082:8080"

  db:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: tech_challenge
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5433:5432"
    volumes:
      - ./Configs/script.sql:/docker-entrypoint-initdb.d/script.sql

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:      
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - default

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin@123
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - default

networks:
  default:
    driver: bridge
    name: tech_challenge
