version: '3.5'

services: 
    api01: &api
        hostname: api01
        build:
            context: .
            dockerfile: ./src/TechChallenge01.Api/Dockerfile        
        restart: always
        environment:
            ASPNETCORE_ENVIRONMENT: Docker
        depends_on:
        - db
        ports:
        - "8080:8080"

    db:
        image: postgres
        container_name: postgress
        restart: always
        environment:
            POSTGRES_DB: tech_challenge
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: admin
        ports:
        - "5433:5432"
        volumes:
        - ./Configs/script.sql:/docker-entrypoint-initdb.d/script.sql

    prometheus:
        image: prom/prometheus
        ports:
            - "9090:9090"
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
        networks:
            - default
    grafana:
        image: grafana/grafana
        ports:
            - "3000:3000"
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=admin
        volumes:
            - ./grafana:/var/lib/grafana
        depends_on:
            - prometheus
        networks:
            - default

networks:
    default:
        driver: bridge
        name: tech_challenge