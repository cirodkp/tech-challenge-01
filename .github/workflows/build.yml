name: Build Tests and Deploy app

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Restore
        run: dotnet restore ./TechChallenge01.sln
        
      - name: Build
        run: dotnet build ./TechChallenge01.sln --configuration Release --no-restore
        
      - name: Test
        run: dotnet test ./TechChallenge01.sln --configuration Release --no-restore --no-build --collect:"XPlat Code Coverage" --logger trx --results-directory coverage
        
      - name: Create code coverage report
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:coverage/*/coverage.cobertura.xml -targetdir:CodeCoverage -reporttypes:'MarkdownSummaryGithub,Cobertura'
          
      - name: Write to Job Summary
        run: cat CodeCoverage/SummaryGithub.md >> $GITHUB_STEP_SUMMARY
        
  deploy:
      runs-on: ubuntu-latest
      needs: build
      steps:
      - uses: actions/checkout@v4
        
      - name: Docker Login
        uses: docker/login-action@v3.3.0
        with:
          username: 'liciomachado'
          password: ${{ secrets.SECRET_DOCKERHUB }}
          
      - name: Build and push Docker images
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          file: ./src/TechChallenge01.Api/Dockerfile  # Caminho para o Dockerfile
          tags: 'liciomachado/tech-challenge-group43:latest'
          push: true
          
