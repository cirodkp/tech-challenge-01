name: Build, Test and Deploy App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    strategy:
      matrix:
        service:
          - name: api
            context: ./src/TechChallenge01.Api
            dockerfile: Dockerfile
            image_suffix: tech-challenge-api:latest
          - name: apiqueue
            context: ./src/TechChallenge01.ApiMessaging
            dockerfile: Dockerfile
            image_suffix: tech-challenge-apiqueue:latest
          - name: tokenapi
            context: ./src/TechChallenge01.TokenApi
            dockerfile: Dockerfile
            image_suffix: tech-challenge-tokenapi:latest
          - name: webstatus
            context: ./src/TechChallenge01.WebStatus
            dockerfile: Dockerfile
            image_suffix: tech-challenge-webstatus:latest
          - name: apigateway
            context: ./src/TechChallenge01.ApiGateway
            dockerfile: Dockerfile
            image_suffix: tech-challenge-apigateway:latest
          - name: rabbitmq-consumer
            context: ./src/TechChallenge01.Infra.Consumer
            dockerfile: Dockerfile
            image_suffix: tech-challenge-rabbitmq-consumer:latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      
      - name: Restore, Build and Test
        run: |
          dotnet restore ./TechChallenge01.sln
          dotnet build ./TechChallenge01.sln --configuration Release --no-restore
          dotnet test ./TechChallenge01.sln --configuration Release --no-build --collect:"XPlat Code Coverage" --logger trx --results-directory coverage
      
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image for ${{ matrix.service.name }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.context }}/${{ matrix.service.dockerfile }}
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.service.image_suffix }}

  build_postgres:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Build and push PostgreSQL image
        uses: docker/build-push-action@v6
        with:
          context: ./Configs
          file: Dockerfile.postgres
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/tech-challenge-postgres:latest
