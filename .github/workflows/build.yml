name: Build Tests and Deploy app

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Restore
        run: dotnet restore ./TechChallenge01.sln
        
      - name: Build
        run: dotnet build ./TechChallenge01.sln --configuration Release --no-restore
        
      - name: Test
        #run: dotnet test ./TechChallenge01.sln --configuration Release --no-restore --no-build --collect:"XPlat Code Coverage" --logger trx --results-directory coverage
        run: dotnet test ./TechChallenge01.sln --configuration Release --no-restore --no-build --verbosity normal --logger trx --collect:"XPlat Code Coverage"

      - name: Combine Coverage Reports # This is because one report is produced per project, and we want one result for all of them.
        uses: danielpalme/ReportGenerator-GitHub-Action@5.2.4
        with:
          reports: "**/*.cobertura.xml" # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
          targetdir: "${{ github.workspace }}" # REQUIRED # The directory where the generated report should be saved.
          reporttypes: "Cobertura" 
          verbosity: "Info" # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
          title: "Code Coverage" # Optional title.
          tag: "${{ github.run_number }}_${{ github.run_id }}" # Optional tag or build version.
          customSettings: "" # Optional custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings.
          toolpath: "reportgeneratortool" # Default directory for installing the dotnet tool.
          
      - name: Upload Combined Coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ${{ github.workspace }}/Cobertura.xml
          retention-days: 5
          
      - name: Publish Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: "Cobertura.xml"
          badge: true
          fail_below_min: false # just informative for now
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: "10 30"

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
          
      - name: Upload Test Result Files
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ${{ github.workspace }}/**/TestResults/**/*
          retention-days: 5
          
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.16.1
        if: always()
        with:
          trx_files: "${{ github.workspace }}/**/*.trx"
        
  deploy:
      runs-on: ubuntu-latest
      needs: build
      steps:
      - uses: actions/checkout@v4
        
      - name: Docker Login
        uses: docker/login-action@v3.3.0
        with:
          username: 'liciomachado'
          password: ${{ secrets.SECRET_DOCKERHUB }}
          
      - name: Build and push Docker images
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          file: ./src/TechChallenge01.Api/Dockerfile  # Caminho para o Dockerfile
          tags: 'liciomachado/tech-challenge-group43:latest'
          push: true
          
