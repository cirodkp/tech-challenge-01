name: Build Tests and Deploy app

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          dotnet-quality: 'ga'
          
      - name: Restore
        run: dotnet restore ./TechChallenge01.sln
        
      - name: Build
        run: dotnet build ./TechChallenge01.sln --configuration Release --no-restore
        
      - name: Test
        run: dotnet test ./TechChallenge01.sln --configuration Release --no-restore --no-build --collect:"XPlat Code Coverage" --logger trx --results-directory coverage
        
      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.3.9
        with:
          reports: 'coverage.xml' # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
          targetdir: 'coveragereport' # REQUIRED # The directory where the generated report should be saved.
          reporttypes: 'HtmlInline;Cobertura' # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, OpenCover, CsvSummary, Html, Html_Dark, Html_Light, Html_BlueRed, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, Html_BlueRed_Summary, JsonSummary, CodeClimate, Latex, LatexSummary, lcov, MarkdownSummary, MarkdownAssembliesSummary, MarkdownSummaryGithub, MarkdownDeltaSummary, MHtml, SvgChart, SonarQube, TeamCitySummary, TextSummary, TextDeltaSummary, Xml, XmlSummary
          verbosity: 'Info' # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
          title: 'Test Results' # Optional title.
          tag: '${{ github.run_number }}_${{ github.run_id }}' # Optional tag or build version.
          toolpath: 'reportgeneratortool' # Default directory for installing the dotnet tool.
      
      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: CoverageReport # Artifact name        
          path: coveragereport # Directory containing files to upload
      
      - name: Add comment to PR # Only applicable if 'MarkdownSummaryGithub' or one of the other Markdown report types is generated
        if: github.event_name == 'pull_request'
        run: gh pr comment $PR_NUMBER --body-file coveragereport/SummaryGithub.md # Adjust path and filename if necessary
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}
          
      - name: Publish coverage in build summary # Only applicable if 'MarkdownSummaryGithub' or one of the other Markdown report types is generated
        run: cat coveragereport/SummaryGithub.md >> $GITHUB_STEP_SUMMARY # Adjust path and filename if necessary
        shell: bash  
        
  deploy:
      runs-on: ubuntu-latest
      needs: build
      steps:
      - uses: actions/checkout@v4
        
      - name: Docker Login
        uses: docker/login-action@v3.3.0
        with:
          username: 'liciomachado'
          password: ${{ secrets.SECRET_DOCKERHUB }}
          
      - name: Build and push Docker images
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          file: ./src/TechChallenge01.Api/Dockerfile  # Caminho para o Dockerfile
          tags: 'liciomachado/tech-challenge-group43:latest'
          push: true
